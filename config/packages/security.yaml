security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        email_or_pseudo_provider:
            id: App\Security\EmailOrPseudoUserProvider
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: email_or_pseudo_provider
            entry_point: App\Security\AppAuthenticator
            custom_authenticator: App\Security\AppAuthenticator

            form_login:
                login_path: app_login
                check_path: app_login
                default_target_path: app_login_success
#                enable_csrf: true

            logout:
                path: app_logout
                target: app_logout_success
                invalidate_session: true # Invalide la session de l'utilisateur lors du logout
                delete_cookies:
                    OVSCHOOL_REMEMBERME: []

            remember_me:
                secret: '%kernel.secret%'  # Utilise la clé secrète de l'application
                lifetime: 604800  # Durée de la session en secondes (7 jours ici)
                path: /  # Chemin sur lequel le cookie est valide: / désigne la racine et donc toute l'application
                name: OVSCHOOL_REMEMBERME # Nom spécifique au contexte
                secure: true                  # Seulement pour les connexions HTTPS
                httponly: true               # Rend le cookie inaccessible depuis JavaScript > sécurité contre les attaques XSS

            #custom_authenticator: App\Security\Authentification
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
